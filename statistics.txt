Compare both DFS and BFS (use the statistics function), save the results in a text document:

BFS
action: None
action: mc
action: m
action: cc
action: c
action: mm
action: mc
action: mm
action: c
action: cc
action: m
action: mc
depth:  11
search cost:  2750
solution cost:  11
cpu time:  0.09375
effective branching factor:  2.054312972045487


DFS
action: None
action: cc
action: c
action: cc
action: c
action: mm
action: mc
action: mm
action: c
action: cc
action: c
action: cc
depth:  11
search cost:  15
solution cost:  11
cpu time:  0.0
effective branching factor:  1.279137959512401
-------------------------------------------------------------
If you remove the check for already visited states in DFS and run the problem, what happen then (use the statistics function)? Save your results in the text document.

BFS
action: None
action: mc
action: m
action: cc
action: c
action: mm
action: mc
action: mm
action: c
action: cc
action: m
action: mc
depth:  11
search cost:  2750
solution cost:  11
cpu time:  0.09375
effective branching factor:  2.054312972045487

DFS

The DFS algorithm gets stuck in a infiniate loop.

-------------------------------------------------------------
Compare BFS with and without already visited states check. Write the statistics in the text document.

BFS
action: None
action: mc
action: m
action: cc
action: c
action: mm
action: mc
action: mm
action: c
action: cc
action: m
action: mc
depth:  11
search cost:  24279
solution cost:  11
cpu time:  0.875
effective branching factor:  2.504132732032241
-------------------------------------------------------------
Run the IDS algorithm and get the statistics from it, add the results to
your text document.

IDS
action: None
action: cc
action: c
action: cc
action: c
action: mm
action: mc
action: mm
action: c
action: cc
action: c
action: cc
depth:  11
search cost:  15
solution cost:  11
cpu time:  0.0
effective branching factor:  1.279137959512401

-------------------------------------------------------------
Compare the outcome of the different heuristics using greedy search
save the statistics in your text document.