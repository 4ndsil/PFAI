Andreas Siljefors
Jesper Blomqvist
Tarkan Cakici
----------------------------------------------------------------------------------------------------------------

Part 1 - Harry Potter


1.Yes, both Harry Potter and Draco Malfoy has 15"_elder_thestral_hair.

?- bagof(X, wand(X,Y), L).
Y = '10"_blackthorn_unknown',
L = [harry_potter] ? ;
Y = '10"_hawthorn_unicorn',
L = [harry_potter] ? ;
Y = '10"_hawthorn_unicorn_hair',
L = [draco_malfoy] ? ;
Y = '11"_holly_phoenix',
L = [harry_potter] ? ;
Y = '11"_vine_dragon',
L = [harry_potter] ? ;
Y = '11"_vine_dragon_heartstring',
L = [hermione_granger] ? ;
Y = '12"_ash_unicorn_hair',
L = [cedric_diggory] ? ;
Y = '13"_walnut_dragon_heartstring',
L = [hermione_granger] ? ;
Y = '15"_elder_thestral_hair',
L = [harry_potter,draco_malfoy] ? ;
no

2. Hermione Granger is influenced by Harry Potter, Cedric Diggory, and Hogwarts.

findall(X, influence(X, hermione_granger), L).
L = [harry_potter,cedric_diggory,hogwarts] ? ;
no

3. No, there are no objects that both influence and belong to another object.

?- findall(X, (influence(X, Y), belongs_to(X, Y)), L).
L = [] ? ;
no

4. Yes, Draco Malfoy has influence over Slytherin, which he also belongs to.

| ?- bagof(X, (trans_influence(X, Y), belongs_to(X, Y)), L).
Y = slytherin,
L = [draco_malfoy] ? ;
no

?- bagof(Y, trans_influence(X, Y), L).
X = cedric_diggory,
L = [harry_potter,hermione_granger] ? ;
X = draco_malfoy,
L = [gryffindor,slytherin,hufflepuff,harry_potter,hermione_granger,cedric_diggory,draco_malfoy] ? ;
X = harry_potter,
L = [harry_potter] ? ;
X = hermione_granger,
L = [hermione_granger] ? ;
X = hogwarts,
L = [hermione_granger,harry_potter,hermione_granger,harry_potter,hogwarts] ? ;
no

5. Yes, Harry Potter, Hermione Granger, Draco Malfoy and Hogwarts has transitional influce over themselves.

?- findall(X, trans_influence(X, X), L).
L = [harry_potter,hermione_granger,draco_malfoy,hogwarts] ? ;
no

6. Yes, for instance, Cedric Diggory influences Harry Potter, Hermione Granger, however they are not loyal to Cedric Diggory.

?- bagof(Y, (trans_influence(X, Y), \+loyalty(Y, X), X \=Y), L).
X = cedric_diggory,
L = [harry_potter,hermione_granger] ? ;
X = draco_malfoy,
L = [gryffindor,slytherin,hufflepuff,harry_potter,hermione_granger,cedric_diggory] ? ;
X = hogwarts,
L = [hermione_granger,harry_potter,hermione_granger,harry_potter] ? ;

7. No, there existis no object that has transitaional object over another where the latter is loyal to the former.

?- bagof(Y, (trans_influence(X, Y), loyalty(Y, X), X \=Y), L).
no

----------------------------------------------------------------------------------------------------------------

Part 2 - Sets, Unification and Terms


1. 

?- [X,Y,Z|L] = [a|Zs].
X = a,
Zs = [Y,Z|L] ? 
yes

The head "a" unifies with X as they are the same. The rest of the list "Y,Z|L" is then simply unified with what remains, that is, "Zs".

2. 

?- [a,b] = [X,Y,Z].
no

This might be because the two list has different lengths, the number of elements needs to be the same for a unification to complete.

3.

?- f(g(X),a,Y) = f(g(b),Y,Z).
X = b,
Y = a,
Z = a ? 
yes

Executable becuase both sides have the same funtur and arity. Therefor the execution will result in a variable assignment that make both sides equal.

4.

?- p(q(X,Y),r([a,b])) = p(q(a,b),r(X,Y)).
no

We think this will not work becuase there is a list in the first argument of r, and no list on the secound argument of r. That is, to the left there's
only one variable and to the right there's two variables. 
That is, [a,b] = (X,Y) does not unify.

5. 

?- p(s(X),a,Z,Z) = p(Y,X,r(Y),r(s(a))).
X = a,
Z = r(s(a)),
Y = s(a) ? 
yes

Considering that a fuction may be represented by a variable the unification holds, hence:
Y=s(X), X=a -> Y=s(a)
This holds true for Z = r(Y) = r(s(a)).

Also, functor names, p, are identical, and arity (no. of arguments=4) is identical.

----------------------------------------------------------------------------------------------------------------

Part 3 - Monkey and banana problem


?- start(Plan).
Plan = [go(a,d),grab(stick),go(d,b),push(box,b,c),go(b,c),climbon(box),swing(stick)] ? ;
Plan = [go(a,b),push(box,b,d),go(b,d),grab(stick),push(box,d,c),go(d,c),climbon(box),swing(stick)] ? ;
Plan = [go(a,b),push(box,b,c),go(b,d),grab(stick),go(d,c),climbon(box),swing(stick)] ? ;
no